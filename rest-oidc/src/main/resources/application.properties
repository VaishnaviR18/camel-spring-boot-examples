## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

###################################
#### Spring configuration
###################################
server.port = 8082

###################################
#### Logging Configuration
###################################

#logging.level.org.springframework.security.web = TRACE
#logging.level.org.springframework.security.authentication = TRACE

###################################
#### Camel configuration
###################################

camel.springboot.name = Camel-Rest-OIDC
camel.servlet.mapping.context-path = /*



###################################
#### OIDC configuration
###################################
sso.realm = camel
sso.port = 8080
sso.service.client-id = service
sso.service.client-secret = <FILL ME WITH SERVICE_OIDC_CREDENTIALS_SECRET>


sso.token.uri = http://localhost:${sso.port}/auth/realms/${sso.realm}/protocol/openid-connect/token/


###################################
#### Spring Security Configuration
###################################
spring.security.oauth2.resourceserver.jwt.issuer-uri = http://localhost:${sso.port}/auth/realms/${sso.realm}
spring.security.oauth2.resourceserver.opaque-token.introspection-uri = ${sso.token.uri}/introspect
spring.security.oauth2.resourceserver.opaque-token.client-id = ${sso.service.client-id}
spring.security.oauth2.resourceserver.opaque-token.client-secret = ${sso.service.client-secret}

